knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align='center')
library(tidyverse) # EDA dan visualisasi data dengan ggplot2
library(plotly) # Visualisasi data interaktif
library(psych) # Visualisasi korelasi
library(klaR) # Naive Bayes
library(rattle) # Grafik decision tree
library(caret) # Machine learning
library(randomForest) # Random Forest
library(scatterplot3d)
library(party)
data("iris")
head(iris)
glimpse(iris)
attributes(iris)
summary(iris)
quantile(iris$Sepal.Length)
quantile(iris$Sepal.Length, c(0.1, 0.3, 0.65))
var(iris$Sepal.Length)
hist(iris$Sepal.Length)
plot(density(iris$Sepal.Length))
table(iris$Species)
pie(table(iris$Species))
barplot(table(iris$Species))
pairs.panels(
iris[,1:4],
scale = TRUE,
hist.col = 'grey85',
bg = c("mediumseagreen", "orange2", "mediumpurple1")[iris$Species],
pch = 21,
main = "Correlation matrix dari data Iris"
)
scatterplot3d::scatterplot3d(iris$Petal.Length, iris$Petal.Length, iris$Petal.Length)
plot_ly(data = iris,
x = ~Sepal.Length, y = ~Petal.Length, z = ~Petal.Width,
color = ~Species,
type = "scatter3d",
mode = "markers") %>%
layout(
scene = list(xaxis = list(title = 'Sepal length'),
yaxis = list(title = 'Petal length'),
zaxis = list(title = 'Petal width')))
dist_matrix <- as.matrix(dist(iris[,1:4]))
heatmap(dist_matrix)
iris %>% # data yang digunakan
ggplot(
aes(x = Species, #Axis x
y = Sepal.Width, #Axis y
fill = Species)) + #Isian box
geom_boxplot() + #Menyuruh ggplot untuk menyiapkan boxplot
scale_fill_brewer(palette = 'Dark2') + #Mengubah warna boxplot
theme_light() + #Tema background putih
labs(title = "Boxplot dari sepal width ~ spesies",
x = "Species",
y = "Sepal width") #Label x dan y axis atau nama dari boxplot
iris %>%
ggplot(aes(x = Species,
y = Sepal.Length,
fill = Species))  +
geom_boxplot() +
scale_fill_brewer(palette = "Dark2") +
theme_light() +
labs(title = "Boxplot sepal length ~ species",
x = "Species",
y = "Sepal length")
iris %>%
ggplot(aes(x = Species,
y = Petal.Width,
fill = Species)) +
geom_boxplot() +
scale_fill_brewer(palette = "Dark2") +
theme_light() +
labs(title = "Boxplot petal width ~ species",
x = "Species",
y = "Petal width")
iris %>%
ggplot(aes(x = Species,
y = Petal.Length,
fill = Species)) +
geom_boxplot() +
scale_fill_brewer(palette = "Dark2") +
theme_light() +
labs(title = "Boxplot petal length ~ species",
x = "Species",
y = "Petal length")
set.seed(12345)
train_index <- createDataPartition(y = iris$Species, # y = variabel dependent
p = .7, # Spesifikasi split menjadi 70% dan 30%
list = FALSE, # Menjadikan hasil menjadi bentuk matrix
times = 1) # Hanya sekali menentukan set partitions
train_data <- iris[train_index,]
test_data <- iris[-train_index,]
# Add decision tree visualization image. The code chunk settings add a figure caption.
knitr::include_graphics("https://cdn-images-1.medium.com/max/1600/0*LHCGnimRNd_7gKsM.png")
# menggunakan caret
fitControl <- trainControl(method = "cv", number = 10, savePredictions = TRUE)
# Membuat model - caret
dt_model <-  train(Species ~ .,
data = train_data,
method = "rpart",
trControl = fitControl)
# caret
confusionMatrix(dt_model)
# Membuat object of importance dari variabel - caret
dt_importance <- varImp(dt_model)
# Membuat plot dari variabel penting
dt_importance %>%
ggplot(aes(x = dt_importance[,1])) +
geom_boxplot() +
labs(title = "Variable importance: Decision tree model") +
theme_light()
# rattle
fancyRpartPlot(dt_model$finalModel, sub = '')
# stats
prediction_dt <- predict(dt_model, test_data)
table(prediction_dt, test_data$Species) %>% # Tabel prediksi
prop.table() %>% # Convert values ke proporsi bukan jumlah
round(2) # Pembulatan
set.seed(1234)
ind <- sample(2, nrow(iris), replace = TRUE, prob = c(0.7, 0.3))
trainData <- iris[ind==1,]
testData <- iris[ind==2,]
my_formula <- Species ~ Sepal.Length + Sepal.Width +Petal.Length + Petal.Width
iris_ctree <-  ctree(my_formula, data = trainData)
table(predict(iris_ctree), trainData$Species)
print(iris_ctree)
plot(iris_ctree)
plot(iris_ctree, type="simple")
testPred <- predict(iris_ctree, newdata = testData)
table(testPred, testData$Species)
# Add random forest visualization image. The code chunk settings add a figure caption.
knitr::include_graphics("https://cdn-images-1.medium.com/max/1600/1*58f1CZ8M4il0OZYg2oRN4w.png")
# Membuat model
rf_model <- train(Species ~ ., # Variabel Y diikuti dengan "~." untuk memasukkan semua variabel dalam formula
method = "rf", # metode random forest
trControl = fitControl, # Cross validation setting
data = train_data) # Data yang digunakan
# Bikin object of importance dari variabel
rf_importance <- varImp(rf_model)
# Membuat boxplotnya
ggplot(data = rf_importance, mapping = aes(x = rf_importance[,1])) + # Data & mapping
geom_boxplot() + # Create box plot
labs(title = "Variable importance: Random forest model") + # Title
theme_light() # Theme
confusionMatrix(rf_model)
prediction_rf <- predict(rf_model, test_data)
table(prediction_rf, test_data$Species) %>%
prop.table() %>%
round(2)
ind_rf <- sample(2, nrow(iris), replace=TRUE, prob=c(0.7, 0.3))
ra_train_data <- iris[ind_rf==1,]
ra_test_data <- iris[ind_rf==2,]
ra_for <-  randomForest(Species ~ ., data=ra_train_data, ntree=100, proximity=TRUE)
table(predict(ra_for), ra_train_data$Species)
print(ra_for)
attributes(ra_for)
plot(ra_for)
importance(ra_for)
varImpPlot(ra_for)
iris_ra_pred<-predict(ra_for, newdata=ra_test_data)
table(iris_ra_pred,ra_test_data$Species)
plot(margin(ra_for, ra_test_data$Species))
# Add random forest visualization image. The code chunk settings add a figure caption.
knitr::include_graphics("https://cdn-images-1.medium.com/max/1600/1*pkpoXVmLeBGauIAppMSVYQ.png")
# Create model
nb_model <- train(Species ~ ., # Set y variable followed by '~'. The period indicates that we want to use all our variables for prediction.
data = train_data,
method = 'nb', # Specify Naive Bayes model
trControl = fitControl) # Use cross validation
confusionMatrix(nb_model)
# Create object of importance of our variables
nb_importance <- varImp(nb_model)
# Create box plot of importance of variables
ggplot(data = nb_importance, mapping = aes(x = nb_importance[,1])) + # Data & mapping
geom_boxplot() + # Create box plot
labs(title = "Variable importance: Naive Bayes model") + # Title
theme_light() # Theme
prediction_nb <- predict(nb_model, test_data)
table(prediction_nb, test_data$Species) %>% # table prediksi.
prop.table() %>% # Convert table values into proportions instead of counts.
round(2) # Bulatkan angka.
save.image("~/data-analysis-dumm/iris-eda-ml/iris-eda-ml-var.RData")
library(rmarkdown)
