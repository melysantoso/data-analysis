ggplotly(kategori_usia)
ggplotly(kategori_usia)
ia_depres <- ggplot(data = internetdata,
aes(x = IA,
y = Depresi,
color = Sex)) +
geom_point(alpha = .7,
size = 3) +
geom_smooth(method = "lm",
se = FALSE,
size = 1.5) +
labs(y = "Depresi",
x = "Internet Addiction",
title = "Korelasi Internet Addiction & Depresi")
ia_depres
internetdata %>%
ggplot(aes(x = Sex, fill = Addicted)) +
theme_bw() +
facet_wrap(~ Koneksi) +
geom_bar() +
labs(y = "Responden Count",
title = "Internet Addiction Rates by Connection and Sex")
internetdata %>%
ggplot(aes(x = Sex, fill = Kategori)) +
theme_bw() +
facet_wrap(~ Koneksi) +
geom_bar() +
labs(y = "Responden Count",
title = "Internet Addiction Rates by Connection and Sex")
internetdata %>%
ggplot(aes(x = Sex, fill = Kategori)) +
theme_bw() +
facet_wrap(~ Koneksi) +
geom_bar() +
labs(y = "Frekuensi Responden",
title = "Variabel Kategori dari Koneksi yang Digunakan")
internetdata %>%
ggplot(aes(x = Sex, fill = Kategori)) +
theme_bw() +
facet_wrap(~ Usia) +
geom_bar() +
labs(y = "Frekuensi Responden",
title = "Variabel Jenis Kelamin dari Usia dan Kategori")
internetdata %>%
ggplot(aes(x = Sex, fill = Kategori)) +
theme_bw() +
facet_wrap(~ Alasan) +
geom_bar() +
labs(y = "Frekuensi Responden",
title = "Variabel Jenis Kelamin dari Usia dan Kategori")
View(internetdata)
internetdata %>%
ggplot(aes(x = Sex, fill = Kategori)) +
theme_bw() +
facet_wrap(~ MedSos) +
geom_bar() +
labs(y = "Frekuensi Responden",
title = "Variabel Jenis Kelamin dari Usia dan Kategori")
internetdata %>%
ggplot(aes(x = Sex, fill = Kategori)) +
theme_bw() +
facet_wrap(~ Koneksi) +
geom_bar() +
labs(y = "Frekuensi Responden",
title = "Variabel Jenis Kelamin dari Koneksi yang Digunakan")
library(vcd)
mosaic(jj, main = "Internet Data")
library(ggalluvial)
internetall <- internetdata %>%
group_by(Addicted, Sex, Koneksi) %>%
count()
library(ggalluvial)
internetall <- internetdata %>%
group_by(Kategori, Sex, Koneksi) %>%
count()
head(internetall)
ggplot(internetall,
aes(axis1 = Koneksi,
axis2 = Kategoru,
y = n)) +
geom_alluvium(aes(fill = Sex)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Koneksi", "Kategori"),
expand = c(.1, .1)) +
labs(title = "Internet Data",
subtitle = "stratified by koneksi, sex, and kategori",
y = "Frequency") +
theme_minimal()
library(ggalluvial)
internetall <- internetdata %>%
group_by(Kategori, Sex, Koneksi) %>%
count()
head(internetall)
ggplot(internetall,
aes(axis1 = Koneksi,
axis2 = Kategori,
y = n)) +
geom_alluvium(aes(fill = Sex)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Koneksi", "Kategori"),
expand = c(.1, .1)) +
labs(title = "Internet Data",
subtitle = "stratified by koneksi, sex, and kategori",
y = "Frequency") +
theme_minimal()
internetall2 <- internetdata %>%
group_by(Addicted, Sex, Koneksi, Fakultas) %>%
count()
internetall2 <- internetdata %>%
group_by(Kategori, Sex, Koneksi, Fakultas) %>%
count()
ggplot(internetall2,
aes(axis1 = Kategori,
axis2 = Koneksi,
axis3 = Fakultas,
y = n)) +
geom_alluvium(aes(fill = Sex)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Kategori", "Koneksi", "Fakultas"),
expand = c(.1, .1)) +
scale_fill_viridis_d() +
labs(title = "Internet Data",
subtitle = "stratified by addicting category, koneksi, dan layanan",
y = "Frequency",
x = "Demographic") +
theme_minimal()
ia_depres <- ggplot(data = internetdata,
aes(x = IA,
y = Depresi,
color = Sex)) +
geom_point(alpha = .7,
size = 3) +
geom_smooth(method = "lm",
se = FALSE,
size = 1.5) +
labs(y = "Depresi",
x = "Internet Addiction",
title = "Korelasi Internet Addiction & Depresi")
ia_depres
newdata <- select(internetdata, IA, Depresi, Anxiety, Stress)
df <- dplyr::select_if(newdata, is.numeric)
r <- cor(df, use="complete.obs")
round(r, 2)
library(ggcorrplot)
rr <- ggcorrplot(r)
rr
ggcorrplot(r,
hc.order = T,
type = "lower",
lab = T)
newdata1 <-  select(internetdata, Usia, IA, Depresi, Anxiety, Stress)
internet_lm <- lm(IA ~ Usia + Depresi + Anxiety + Stress,
data = newdata1)
internet_lm
newdata <- select(internetdata, IA, Depresi, Anxiety, Stress)
df <- dplyr::select_if(newdata, is.numeric)
r <- cor(df, use="complete.obs")
round(r, 2)
library(ggcorrplot)
rr <- ggcorrplot(r)
ggcorrplot(r,
hc.order = T,
type = "lower",
lab = T)
newdata1 <-  select(internetdata, Usia, IA, Depresi, Anxiety, Stress)
internet_lm <- lm(IA ~ Usia + Depresi + Anxiety + Stress,
data = newdata1)
grid.arrange(rr, internet_lm, ncol = 2)
newdata <- select(internetdata, IA, Depresi, Anxiety, Stress)
df <- dplyr::select_if(newdata, is.numeric)
r <- cor(df, use="complete.obs")
round(r, 2)
rr <- ggcorrplot(r)
ggcorrplot(r,
hc.order = T,
type = "lower",
lab = T)
newdata1 <-  select(internetdata, Usia, IA, Depresi, Anxiety, Stress)
internet_lm <- lm(IA ~ Usia + Depresi + Anxiety + Stress,
data = newdata1)
rr
internet_lm
newdata <- select(internetdata, IA, Depresi, Anxiety, Stress)
df <- dplyr::select_if(newdata, is.numeric)
r <- cor(df, use="complete.obs")
round(r, 2)
rr <- ggcorrplot(r)
ggcorrplot(r,
hc.order = T,
type = "lower",
lab = T)
newdata1 <-  select(internetdata, IA, Depresi, Anxiety, Stress)
internet_lm <- lm(IA ~ Depresi + Anxiety + Stress,
data = newdata1)
rr
internet_lm
newdata <- select(internetdata, IA, Depresi, Anxiety, Stress)
df <- dplyr::select_if(newdata, is.numeric)
r <- cor(df, use="complete.obs")
round(r, 2)
rr <- ggcorrplot(r)
ggcorrplot(r,
hc.order = T,
type = "lower",
lab = T)
newdata1 <-  select(internetdata, IA, Depresi, Anxiety, Stress)
internet_lm <- lm(IA ~ Depresi + Anxiety + Stress,
data = newdata1)
rr
internet_lm
ia_depres <- ggplot(data = internetdata,
aes(x = IA,
y = Depresi,
color = Sex)) +
geom_point(alpha = .7,
size = 3) +
geom_smooth(method = "lm",
se = FALSE,
size = 1.5) +
labs(y = "Depresi",
x = "Internet Addiction",
title = "Korelasi Internet Addiction & Depresi")
ia_depres
library(visreg)
visreg(internet_lm, "Stress", gg = T)
visreg(internetdata$Stress, "internetdata$Depresi", gg = T)
visreg(internet_lm, "Stress", gg = T)
visreg(internetdata$Stress, "internetdata$Depresi", gg = T)
library(visreg)
visreg(internet_lm, "Stress", gg = T)
library(visreg)
visreg(internet_lm, "Stress", gg = T)
visreg(internet_lm, "Depresi", gg = T)
visreg(internet_lm, "Anxiety", gg = T)
library(vcd)
jj <- xtabs(~Kategori + Sex + Device)
library(vcd)
jj <- xtabs(~Kategori + Sex + Device)
library(vcd)
jj <- xtabs(~Kategori + Sex + Device, internetdata)
mosaic(jj, main = "Internet Data")
mosaic(jj,
shade = T,
legend = T,
labeling_args = list(set_vernames = c(Sex = "Gender",
Addicted = "Kategori Adiksi",
Koneksi = "Tipe Koneksi")),
set_labels = list(Addicted = c("Yes", "No"),
Sex = c("Pria", "Wanita"),
Koneksi = c("Data", "Wifi")),
main = "Internet Data")
library(vcd)
jj <- xtabs(~Kategori + Sex + Device, internetdata)
mosaic(jj, main = "Internet Data")
mosaic(jj,
shade = T,
legend = T,
labeling_args = list(set_vernames = c(Sex = "Gender",
Kategori = "Kategori Adiksi",
Koneksi = "Tipe Koneksi")),
set_labels = list(Kategori = c("Yes", "No"),
Sex = c("Pria", "Wanita"),
Koneksi = c("Data", "Wifi")),
main = "Internet Data")
library(vcd)
jj <- xtabs(~Kategori + Sex + Koneksi, internetdata)
mosaic(jj, main = "Internet Data")
mosaic(jj,
shade = T,
legend = T,
labeling_args = list(set_vernames = c(Sex = "Gender",
Kategori = "Kategori Adiksi",
Koneksi = "Tipe Koneksi")),
set_labels = list(Kategori = c("Yes", "No"),
Sex = c("Pria", "Wanita"),
Koneksi = c("Data", "Wifi")),
main = "Internet Data")
mosaic(jj, main = "Internet Data")
library(vcd)
jj <- xtabs(~Kategori + Sex + Koneksi, internetdata)
# mosaic(jj, main = "Internet Data") #ini memunculkan layer dasar
mosaic(jj,
shade = T,
legend = T,
labeling_args = list(set_vernames = c(Sex = "Gender",
Kategori = "Kategori Adiksi",
Koneksi = "Tipe Koneksi")),
set_labels = list(Kategori = c("Yes", "No"),
Sex = c("Pria", "Wanita"),
Koneksi = c("Data", "Wifi")),
main = "Internet Data")
# Load necessary packages.
library(flexdashboard) # Dashboard package
library(highcharter) # Interactive data visualizations
library(plotly) # Interactive data visualizations
library(viridis) # Color gradients
library(tidyverse) # Metapackge
library(countrycode) # Converts country names/codes
library(rjson) # JSON reader
library(crosstalk) # Provides interactivity for HTML widgets
library(DT) # Displaying data tables
data <- read.csv("master.csv") %>%
rename(country = "Ã¯..country") %>%
filter(year != 2016,
country != 'Dominica',
country != 'Saint Kitts and Nevis')
#View(data)
data <- data %>%
mutate(country = fct_recode(country, "The Bahamas" = "Bahamas"),
country = fct_recode(country, "Cape Verde" = "Cabo Verde"),
country = fct_recode(country, "South Korea" = "Republic of Korea"),
country = fct_recode(country, "Russia" = "Russian Federation"),
country = fct_recode(country, "Republic of Serbia" = "Serbia"),
country = fct_recode(country, "United States of America" = "United States"))
data$age <- factor(data$age, levels = c("5-14 years", "15-24 years", "25-34 years", "35-54 years", "55-74 years", "75+ years"))
#str(data)
# Create a custom theme for the plots.
custom_theme <- hc_theme(
colors = c('#5CACEE', 'green', 'red'),
chart = list(
backgroundColor = '#FAFAFA',
plotBorderColor = "black"),
xAxis = list(
gridLineColor = "E5E5E5",
labels = list(style = list(color = "#333333")),
lineColor = "#E5E5E5",
minorGridLineColor = "#E5E5E5",
tickColor = "#E5E5E5",
title = list(style = list(color = "#333333"))),
yAxis = list(
gridLineColor = "#E5E5E5",
labels = list(style = list(color = "#333333")),
lineColor = "#E5E5E5",
minorGridLineColor = "#E5E5E5",
tickColor = "#E5E5E5",
tickWidth = 1,
title = list(style = list(color = "#333333"))),
title = list(style = list(color = '#333333', fontFamily = "Lato")),
subtitle = list(style = list(color = '#666666', fontFamily = "Lato")),
legend = list(
itemStyle = list(color = "#333333"),
itemHoverStyle = list(color = "#FFF"),
itemHiddenStyle = list(color = "#606063")),
credits = list(style = list(color = "#666")),
itemHoverStyle = list(color = 'gray'))
View(data)
#R data mining
setwd("C://Users/User/Documents/Datamining/")
setwd("~/Learning R S02/Internet")
internet <- read.csv("datainternet.csv", stringsAsFactors = F, header = T)
data <- read.csv("datainternet.csv", stringsAsFactors = F, header = T)
#remove some unused variables -c(Nama, Email, Asal)
data <- data %>%
select(-c("Nama", "Email", "Asal", "Addicted")) %>%
as.data.frame()
library(tidyverse)
#remove some unused variables -c(Nama, Email, Asal)
data <- data %>%
select(-c("Nama", "Email", "Asal", "Addicted")) %>%
as.data.frame()
#beberapa data dijadikan nominal
data.nominal <- c("Sex", "Fakultas", "Pendidikan", "Device", "WiFi",
"Koneksi", "Alasan", "MedSos", "Lembur", "Layanan",
"Situs", "Waktu", "Tempat")
data[data.nominal] <- lapply(data[data.nominal], function(x){factor(x)})
#membuat data durasi menjadi ordinal
data$Durasi <- factor(data$Durasi,
ordered = T,
levels = c("1- 3 Jam",
"4 - 7 Jam",
"> 7 Jam"))
#membuat kategorisasi responden adiksi dengan mean skor IA
data$Kategori <- ifelse(data$IA <= round(mean(data$IA)), "nonadiksi", "adiksi")
str(data)
data$Kategori <- as.factor(data$Kategori)
str(data)
#remove some unused variables -c(Nama, Email, Asal)
data <- data %>%
select(-c("Nama", "Email", "Asal", "Addicted")) %>%
as.data.frame()
#beberapa data dijadikan nominal
data.nominal <- c("Sex", "Fakultas", "Pendidikan", "Device", "WiFi",
"Koneksi", "Alasan", "MedSos", "Lembur", "Layanan",
"Situs", "Waktu", "Tempat")
data[data.nominal] <- lapply(data[data.nominal], function(x){factor(x)})
data <- read.csv("datainternet.csv", stringsAsFactors = F, header = T)
#remove some unused variables -c(Nama, Email, Asal)
data <- data %>%
select(-c("Nama", "Email", "Asal", "Addicted")) %>%
as.data.frame()
#beberapa data dijadikan nominal
data.nominal <- c("Sex", "Fakultas", "Pendidikan", "Device", "WiFi",
"Koneksi", "Alasan", "MedSos", "Lembur", "Layanan",
"Situs", "Waktu", "Tempat")
data[data.nominal] <- lapply(data[data.nominal], function(x){factor(x)})
#membuat data durasi menjadi ordinal
data$Durasi <- factor(data$Durasi,
ordered = T,
levels = c("1- 3 Jam",
"4 - 7 Jam",
"> 7 Jam"))
#membuat kategorisasi responden adiksi dengan mean skor IA
data$Kategori <- ifelse(data$IA <= round(mean(data$IA)), "nonadiksi", "adiksi")
str(data)
data$Kategori <- as.factor(data$Kategori)
set.seed(12345)
ind <- sample(2, nrow(data), replace = TRUE, prob = c(0.7, 0.3))
train <- data[ind==1,]
test <-  iris[ind==2,]
View(train)
View(test)
test <-  data[ind==2,]
View(train)
View(test)
library(party)
myformula <-  Kategori ~ IA + Depresi + Anxiety + Stress
data_ctree <-  ctree(myformula, data = train)
#check the prediction
table(predict(data_ctree), data$Kategori)
#check the prediction
table(predict(data_ctree), train$Kategori)
print(data_ctree)
plot(data_ctree)
library(party)
myformula <-  Fakultas ~ IA + Depresi + Anxiety + Stress
data_ctree <-  ctree(myformula, data = train)
#check the prediction
table(predict(data_ctree), train$Fakultas)
print(data_ctree)
myformula <-  Kategori ~ IA + Depresi + Anxiety + Stress
data_ctree <-  ctree(myformula, data = train)
#check the prediction
table(predict(data_ctree), train$Fakultas)
print(data_ctree)
#check the prediction
table(predict(data_ctree), train$Kategori)
print(data_ctree)
plot(data_ctree, type = "simple")
myformula <-  IA ~ Depresi + Anxiety + Stress
data_ctree <-  ctree(myformula, data = train)
#check the prediction
table(predict(data_ctree), train$Kategori)
### Trying random forest
ind <-  sample(2, nrwo(data), replace = TRUE, prob = c(0.7, 0.3))
### Trying random forest
ind <-  sample(2, nrow(data), replace = TRUE, prob = c(0.7, 0.3))
train <- data[ind==1,]
test <- data[ind==2,]
library(randomForest)
### Trying random forest
ind <-  sample(2, nrow(data), replace = TRUE, prob = c(0.7, 0.3))
train <- data[ind==1,]
test <- data[ind==2,]
rf <-  randomForest(Kategori ~ ., data = train, ntree=100, proximity = TRUE)
str(train)
rf_data <-  data %>% select(-c("Pendidikan", "Device", "WiFi",
"Koneksi", "Alasan", "Lembur", "Layanan",
"Situs", "Waktu", "Tempat"))
ind <-  sample(2, nrow(rf_data), replace = TRUE, prob = c(0.7, 0.3))
train <-rf_data[ind==1,]
test <- rf_data[ind==2,]
View(test)
rf_data <-  data %>% select(-c("Pendidikan", "Device", "WiFi",
"Koneksi", "MedSos" "Alasan", "Lembur", "Layanan",
"Situs", "Waktu", "Tempat"))
rf_data <-  data %>% select(-c("Pendidikan", "Device", "WiFi",
"Koneksi", "MedSos", "Alasan", "Lembur", "Layanan",
"Situs", "Waktu", "Tempat"))
ind <-  sample(2, nrow(rf_data), replace = TRUE, prob = c(0.7, 0.3))
train <-rf_data[ind==1,]
test <- rf_data[ind==2,]
View(test)
rf <-  randomForest(Kategori ~ ., data = train, ntree=100, proximity = TRUE)
table(predict(rf), train$Kategori)
plot(rf)
print(rf)
attributes(rf)
importance(rf)
varImpPlot(rf)
intPred <- predict(rf, newdata = test)
table(intPred, test$Kategori)
data2 <- data
view(data2)
data2 <- data %>% select(-c("Pendidikan", "Device", "WiFi",
"Koneksi", "MedSos", "Alasan", "Lembur", "Layanan",
"Situs", "Waktu", "Tempat"))
View(data2)
data2 <- data %>% select(-c("Sex", "Usia", "Fakultas", "Durasi", "Pendidikan", "Device", "WiFi",
"Koneksi", "MedSos", "Alasan", "Lembur", "Layanan",
"Situs", "Waktu", "Tempat"))
View(data2)
(kmean.result <- kmeans(data2, 3))
data2$Kategori <- NULL
(kmean.result <- kmeans(data2, 3))
data2$Kategori <- NULL
(kmean.result <- kmeans(data2, 2))
(kmean.result <- kmeans(data2, 2))
table(data$Kategori, kmean.result$cluster)
plot(data2[c("Depresi", "Anxiety")], col = kmean.result$cluster)
points(kmean.result$centers[, c("depresi", "Anxiety")], col = 1:3, pch = 8, cex = 2)
plot(data2[c("IA", "Anxiety")], col = kmean.result$cluster)
data2$Kategori <- NULL
(kmean.result <- kmeans(data2, 3))
plot(data2[c("IA", "Anxiety")], col = kmean.result$cluster)
points(kmean.result$centers[, c("IA", "Anxiety")], col = 1:3, pch = 8, cex = 2)
View(data2)
